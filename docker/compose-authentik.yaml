services:
  postgres:
    image: postgres:16.4-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - /opt/authentik/db:/var/lib/postgresql/data
    env_file:
      - .authentik.env
  valkey:
    image: valkey/valkey:8.0.1
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - /opt/authentik/redis:/data
  server:
    image: ghcr.io/goauthentik/server:2024.12.1
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
    env_file:
      - .authentik.env
    volumes:
      - /opt/authentik/media:/media
    ports:
      - "9000:9000" # http
      #      - "9443:9443" # https
    depends_on:
      postgres:
        condition: service_healthy
      valkey:
        condition: service_healthy
  worker:
    image: ghcr.io/goauthentik/server:2024.12.1
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /opt/authentik/media:/media
    env_file:
      - .authentik.env
    depends_on:
      postgres:
        condition: service_healthy
      valkey:
        condition: service_healthy
